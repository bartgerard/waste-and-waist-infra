replicaCount: 1

image:
  # Note: the name of the repository is used throughout the chart to figure if we should configure for SE or EE
  # "axoniq/axonserver" is the SE Docker image. Any other (custom) image means that the chart will configure for EE
  repository: axoniq/axonserver
  pullPolicy: IfNotPresent
  tag: "4.5.12"

config:
  serverDomain: nonprod.axon
  accessControl:
    enabled: false
    token: ~

configMapServerProperties: ~

java:
  jvmOptions:
    additionnalOptions: ~
    memoryOptions: "-XX:MinRAMPercentage=75 -XX:MaxRAMPercentage=85"
    memoryErrorOptions: "-XX:+ExitOnOutOfMemoryError -XX:+CrashOnOutOfMemoryError"
    timezoneOptions: "-Duser.timezone=UTC"
    networkingOptions: "-Dnetworkaddress.cache.ttl=0 -Dnetworkaddress.cache.negative.ttl=0"

imagePullSecrets: []

serviceAccount:
  create: true
  annotations: {}

podAnnotations: {}

podSecurityContext:
  runAsUser: 1001
  fsGroup: 1001

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001

service:
  gui:
    type: ClusterIP
    port: 8024
  grpc:
    type: ClusterIP
    port: 8124

uiservice:
  annotations:
    #dev.okteto.com/generate-host: "true"

ingress:
  enabled: true
  className: ""
  annotations:
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


persistence:
  enabled: false

  accessModes:  [ReadWriteOnce]
  ## Storage Capacities for persistent volumes
  size: 3Gi

## Lifecycle handlers:
##   https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
# postStart: "echo Hello from the postStart handler > /usr/share/message"
# preStop: "nginx -s quit; while killall -0 nginx; do sleep 1; done"

## Additional environment variables to set
extraEnvs: []
# extraEnvs:
#   - name: FOO
#     value: some-value
#   - name: BAR
#     valueFrom:
#       secretKeyRef:
#         key: FOO
#         name: secret-resource

extraVolumeMounts: []
## Additional volumeMounts to the main container.
#  - name: plugin-dir
#   mountPath: /var/lib/octant-plugins

extraVolumes: []
## Additional volumes to the pod.
#  - name: plugin-dir
#    emptyDir: {}

extraVolumeClaimTemplates: []
## Additional volumes claim templates.
#  - metadata:
#      name: some-claim-template
#    spec:
#      accessModes: [ "ReadWriteOnce" ]
#      resources:
#        requests:
#          storage: 2Gi

extraInitContainers: []
## Add init containers, which are run before Axon server is started.
# - name: init-myservice
#   image: busybox
#   command: ['sh', '-c', 'until nslookup myservice; do echo waiting for myservice; sleep 2; done;']

extraSidecarContainers: []
## Add sidecar containers to run along Axon server.
# - name: logger
#   image: ez123/alpine-tini

# Virtual service is Istio's set of traffic routing rules
# Istio 1.4+ is supported. For complex use case, consider leaving this to false
# and patching-in your own definition for VirtualService and other resources
virtualservices:
  enabled: false

  # More than one service can be defined if, eg, you have two different gateways listenuing on different hostnames
  services: []
  #  - hosts:
  #    - chart-example.local
  #    - chart-example-two.local
  #    gateways:
  #    - istio-system/my-istio-gateway
  #    ## todo: routes, etc.
  #



resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}
#   cloud.com/my-nodepool: axon-pool

tolerations: []

affinity: {}
